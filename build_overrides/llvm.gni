llvm_root = "third_party/llvm/"
llvm_build_root = "third_party/llvm/llvm/utils/gn/"

shared_binary_target_configs = [
  "//${llvm_build_root}build:compiler_defaults",
  "//${llvm_build_root}build:llvm_code",
  "//${llvm_build_root}build:no_exceptions",
  "//${llvm_build_root}build:no_rtti",
  "//${llvm_build_root}build:thin_archive",
  "//${llvm_build_root}build:warn_covered_switch_default",
]

llvm_third_party_build = true

# set of imports that override llvm vars

# sysroot
import("//build/config/sysroot.gni")

# clang_base_path, use_lld
import("//build/config/clang/clang.gni")

# use_goma, goma_dir
import("//build/toolchain/goma.gni")

# symbol_level
import("//build/config/compiler/compiler.gni")

# Configs to be appended and removed based on top level build
llvm_code_override_configs_remove = [ "//build/config/compiler:chromium_code" ]
llvm_code_override_configs_append = [ "//${llvm_build_root}build:llvm_code" ]

# FIXME: There should be a way to query the output_dir of a target
# as set in toolchain/BUILD.gn
llvm_tblgen_output_dir_suffix = ""
